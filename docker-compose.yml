services:
  server:
    env_file: .env
    container_name: born3am-test-netdata-server-container
    hostname: born3am-test-netdata-server-hostname
    build:
      context: .
      target: dev
      args:
        - CONTAINER_PORT=${CONTAINER_PORT}
        - PORT_PROTOCOL=${PORT_PROTOCOL}
    ports:
      - "${HOST_PORT}:${CONTAINER_PORT}"
    volumes: # Bind mount for development.
      - ./src:/usr/src/app/src
    environment:
      NODE_ENV: ${NODE_ENV}
      POSTGRES_HOST: ${POSTGRES_DB_HOST}
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    secrets:
      - db-password

  db:
    env_file: .env
    container_name: born3am-test-netdata-db-container
    hostname: born3am-test-netdata-db-hostname
    image: postgres
    restart: "on-failure"
    volumes: # Named volume to persist PostgreSQL data.
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_DB_USER}
      POSTGRES_PASSWORD_FILE: /run/secrets/db-password
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    expose:
      - ${POSTGRES_DB_PORT}
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - db-password

  netdata:
    image: netdata/netdata
    container_name: born3am-test-netdata-monitor
    hostname: born3am-test-netdata-monitor-hostname
    ports:
      - "${NETDATA_HOST_PORT}:${NETDATA_CONTAINER_PORT}"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor=unconfined
    volumes:
      - netdata:/etc/netdata
      - netdata:/var/cache/netdata
      - netdata:/var/lib/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Read-only access to Docker socket in order to monitor containers.


volumes:
  db-data:
    name: ${NETDATA_HOST_NAMED_VOLUME}
  netdata:

secrets:
  db-password:
    file: ${POSTGRES_DB_PASSWORD_FILE}